"""create_eligibility_rules_tables

Revision ID: c3cf8131ce0f
Revises: 
Create Date: 2025-03-16 12:11:11.211532

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c3cf8131ce0f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('provider_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_provider_types_code'), 'provider_types', ['code'], unique=True)
    op.create_index(op.f('ix_provider_types_id'), 'provider_types', ['id'], unique=False)
    op.create_table('validation_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_type', sa.String(), nullable=True),
    sa.Column('rules', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_validation_rules_id'), 'validation_rules', ['id'], unique=False)
    op.create_index(op.f('ix_validation_rules_rule_type'), 'validation_rules', ['rule_type'], unique=True)
    op.create_table('base_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('requirement_type', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('validation_rule_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['validation_rule_id'], ['validation_rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_base_requirements_id'), 'base_requirements', ['id'], unique=False)
    op.create_index(op.f('ix_base_requirements_requirement_type'), 'base_requirements', ['requirement_type'], unique=False)
    op.create_table('provider_requirements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_type_id', sa.Integer(), nullable=True),
    sa.Column('base_requirement_id', sa.Integer(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('override_validation_rules', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['base_requirement_id'], ['base_requirements.id'], ),
    sa.ForeignKeyConstraint(['provider_type_id'], ['provider_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_provider_requirements_id'), 'provider_requirements', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_provider_requirements_id'), table_name='provider_requirements')
    op.drop_table('provider_requirements')
    op.drop_index(op.f('ix_base_requirements_requirement_type'), table_name='base_requirements')
    op.drop_index(op.f('ix_base_requirements_id'), table_name='base_requirements')
    op.drop_table('base_requirements')
    op.drop_index(op.f('ix_validation_rules_rule_type'), table_name='validation_rules')
    op.drop_index(op.f('ix_validation_rules_id'), table_name='validation_rules')
    op.drop_table('validation_rules')
    op.drop_index(op.f('ix_provider_types_id'), table_name='provider_types')
    op.drop_index(op.f('ix_provider_types_code'), table_name='provider_types')
    op.drop_table('provider_types')
    # ### end Alembic commands ###
